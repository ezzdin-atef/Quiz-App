{"version":3,"sources":["main.js"],"names":["elements","countSpan","document","querySelector","mainHeading","answers","btn","bullets","spans","footer","selected","selectBox","options","selectedIndex","text","counter","xhr","XMLHttpRequest","el","str","insertAdjacentHTML","replace","obj","innerText","title","innerHTML","submitBtn","answer","choices","i","concat","printResult","classList","add","querySelectorAll","forEach","checked","dataset","correct","remove","p","result","open","send","onreadystatechange","theResponse","JSON","readyState","responseText","span","createElement","length","insertAdjacentElement","questionRender","theQuestion","right_answer"],"mappings":"aAAA,IAAMA,SAAW,CACfC,UAAWC,SAASC,cAAc,sBADpCC,YAAiBF,SAAAC,cAAA,WACfF,QAASC,SAAEA,cAASC,iBACpBC,IAAAA,SAAaF,cAASC,gCACtBE,QAASH,SAASC,cAAc,YAChCG,MAAKJ,GACLK,OAAOL,SAAUC,cAAR,2BACTK,OAAON,SANQC,cAAA,WAOfM,UAAQP,SAASC,eAAc,QAPjCO,SAAAV,SAAAW,UAAAC,QAAAZ,SAAAW,UAAAE,eAAAC,KAYIJ,QAAQ,EACRK,QAAU,EAGRC,IAAM,IAAIC,eAyDZ,SAAIC,aAAEC,GAONnB,OAAAA,OAASK,GAAQe,QAAAA,KAAAA,SAAmBC,QAApC,KAAA,QAAAA,QAAA,KAAA,QAAAA,QAAA,KAAA,UAGFrB,SAAAA,eAAAsB,GACDtB,SAAAI,YAAAmB,UAAAD,EAAAE,MAbCxB,SAASK,QAAQoB,UAAY,GAe/B,IAAA,IAASC,EAAAA,EAAAA,GAAT,EAAmBC,IAAnB,CACE,IAAIC,EAAAA,qDAAAA,OAEcC,EAFdD,mCAAAA,OAEcN,EAAA,UAAAQ,OAAAD,IAFdD,MAAAA,OAEc,IAAAC,EAAA,UAAA,GAFdD,gCAAAA,OAGIC,EAHJD,MAAAA,OAGyBD,aAAQL,EAAA,UAAAQ,OAAAD,KAHjCD,8BACJ5B,SAAAK,QAAAe,mBAAA,YAAAF,GASFlB,SAAS+B,MAAAA,SAAcC,UAAAC,IAAA,MAIrBjC,SAAAA,UAAgBuB,GACXrB,SAAAgC,iBAAA,uBAGGC,QAAQV,SAAAA,GACjBP,EAAAkB,SAhBSlB,EAAGmB,QAAQV,QAAUA,GACvBW,YAMR,SAASP,cACP/B,SAASI,YAAYmC,SAErBvC,SAASK,QAAQoB,UAAY,GAC7BzB,SAASS,OAAOc,UAAY,GAC5B,IAAIiB,EAAC,gCAAAV,OACsBQ,QADtB,yBAAAR,OACqDf,QAAQ,EAD7D,6BAGLf,SAASyC,OAAOhB,UAAYe,EAxF9BxB,IAAI0B,KAAK,MAAT1B,QAAAA,OAAAN,SAAAM,UAAA,GACAA,IAAI2B,OAGFjC,SAAAA,UAAWV,iBAAmBY,SAAQZ,WACtCgB,SAAShB,SAATW,UAAAC,QAAwBF,SAAxBC,UAAAE,eAAAC,KACAE,IAAI2B,KAAJ,MAAA3B,QAAAA,OAAAN,SAAAM,UAAA,GAHFA,IAAA2B,SAOE3B,IAAA4B,mBAAI,WAEFC,GAAcC,MAAdD,IAAAA,QAF8C,IAEhC7B,IAAc+B,WAE5B,CACA/C,YAASC,KAAUsB,MAAAA,IAAnByB,cAIEhD,SAAMiD,UAAO/C,UAASgD,YAAtBC,OADF,IAAK,IAAItB,EAAE,EAAEA,EAAEgB,YAAYM,OAAOtB,IAAK,CAIvC7B,IAAQiD,EAAR/C,SAAiBA,cAASgC,QAFxBlC,SAASO,QAAQ6C,sBAAsB,YAAaH,GAMtDI,SAAAA,MAAeC,SAADpB,iBAGd,iBAEER,YAAU4B,YAAYC,SALxBF,eAAeC,aAUXA,SAAAA,IAAAA,iBAA0BvC,QAA1B,WACAsC,UAAAA,YAAeC,cAGfvB,UAAWc,YAAAM,OAAA,GAVfpC,UAeDuC,YAAAT,YAAA9B,SApCHsC,eAAAC,cAwCEvB","file":"main.min.js","sourcesContent":["const elements = {\r\n  countSpan: document.querySelector('header .count span'),\r\n  mainHeading: document.querySelector('main h3'),\r\n  answers: document.querySelector('main .answers'),\r\n  btn: document.querySelector('.container main .footer .btn'),\r\n  bullets: document.querySelector('.bullets'),\r\n  spans: '',\r\n  footer: document.querySelector('.container main .footer'),\r\n  result: document.querySelector('.result'),\r\n  selectBox: document.getElementById('cat'),\r\n};\r\n\r\nlet selected = elements.selectBox.options[elements.selectBox.selectedIndex].text;\r\nlet counter = 0;\r\nlet correct = 0;\r\n\r\nconst xhr = new XMLHttpRequest();\r\nxhr.open('GET', `json/${selected}.json`, true);\r\nxhr.send();\r\n\r\nelements.selectBox.addEventListener('change', ()=> {\r\n  selected = elements.selectBox.options[elements.selectBox.selectedIndex].text;\r\n  xhr.open('GET', `json/${selected}.json`, true);\r\n  xhr.send();\r\n});\r\n\r\nxhr.onreadystatechange = () => {\r\n  if (xhr.status === 200 && xhr.readyState === 4) {\r\n    \r\n    theResponse = JSON.parse(xhr.responseText);\r\n\r\n    // get and put the count in the DOM\r\n    elements.countSpan.innerText = theResponse.length;\r\n\r\n    // create bullets\r\n    for (let i=0;i<theResponse.length;i++) {\r\n      const span = document.createElement('span');\r\n      elements.bullets.insertAdjacentElement('beforeend', span);\r\n    }\r\n    elements.spans = document.querySelectorAll('.bullets span');\r\n\r\n    // get the question\r\n    theQuestion = theResponse[counter];\r\n    questionRender(theQuestion);\r\n\r\n\r\n    // add click event to the button\r\n    elements.btn.addEventListener('click', () => {\r\n      submitBtn(theQuestion.right_answer);\r\n\r\n      if (counter !== theResponse.length - 1) {\r\n        // get next Question\r\n        counter++;\r\n        theQuestion = theResponse[counter];\r\n        questionRender(theQuestion);\r\n\r\n      } else {\r\n        printResult();\r\n      }\r\n      \r\n    });\r\n\r\n  }\r\n};\r\n\r\nfunction htmlEntities(str) {\r\n  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\r\n}\r\n\r\nfunction questionRender(obj) {\r\n  elements.mainHeading.innerText = obj.title;\r\n  elements.answers.innerHTML = '';\r\n  for (let i=1;i<=4;i++) {\r\n    let el = `\r\n    <div>\r\n      <input type=\"radio\" id=\"answer_${i}\" name=\"question\" data-answer=\"${obj[`answer_${i}`]}\" ${(i === 1)? `checked`: ``}>\r\n      <label for=\"answer_${i}\">${htmlEntities(obj[`answer_${i}`])}</label>\r\n    </div>\r\n    `;\r\n    \r\n    elements.answers.insertAdjacentHTML('beforeend', el);\r\n  }\r\n\r\n  elements.spans[counter].classList.add('on');\r\n}\r\n\r\nfunction submitBtn(answer) {\r\n  let choices = document.querySelectorAll('main .answers input');\r\n  choices.forEach(el => {\r\n    if (el.checked) {\r\n      if (el.dataset.answer == answer) {\r\n        correct++;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction printResult() {\r\n  elements.mainHeading.remove();\r\n\r\n  elements.answers.innerHTML = '';\r\n  elements.footer.innerText = '';\r\n  let p = `\r\n    <p>You passed in <span>${correct}</span> out of <span>${counter+1}</span> Questions</p>\r\n  `;\r\n  elements.result.innerHTML = p;\r\n}"]}